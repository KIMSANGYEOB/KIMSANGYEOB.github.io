{"pages":[],"posts":[{"title":"기술 블로그 조사 &amp; 시작","text":"정적 사이트 생성기술 블로그를 시작하기전에 Github과 연동하여 운영하고싶어 정적 사이트를 만들만한 프레임워크들을 조사했다. Jekyll 루비 기반 가장 보편적이고 인기많은 정적 사이트 제작 프레임워크 문서가 많아지면 빌드하는데 5분이상이 소요될 수 있음 다양한 테마 Hexo 자바스크립트(Node.js) 기반 한글 레퍼런스 꽤 많음 다양한 테마 Hugo Golang 기반 매우 빠른 빌드속도 잘 정리된 문서화 사용할만한 테마는 부족 Hugo? Hexo?처음에 빠른 빌드속도가 빠른것이 장점이라고 많이 알려져있어서 Hugo로 시작했다. 하지만, Go언어 기반으로 되어있고 및 테마 사용 시 구조 파악이나 커스텀 하기가 쉽지가 않았다. 결국, 현재 회사에서도 자바스크립트가 주력 언어이고 관련 개발을 진행하고 있으니 Hexo를 사용하기로 마음먹었다. Hexo 설치Hexo는 Node.js 기반이기 때문에 Node.js가 설치되어있어야 한다. 글로벌하게 hexo-cli 설치한다. 1$ npm install hexo-cli -g hexo로 Blog 프로젝트를 만들어준다. 123$ hexo init blog$ cd blog$ npm install 테마적용을 위해 git clone 진행 (필자는 icarus 테마를 선택) 1$ git clone https://github.com/ppoffice/hexo-theme-icarus.git hexo 테마 themes 폴더안에 clone 받은 테마의 폴더명을 hexo-theme-icarus -&gt; icarus로 변경해준다. 루트 경로에서 _config.yml 파일을 아래처럼 수정해준다. 1theme: icarus 테마에 필요한 npm 패키지들을 설치해준다. (icarus 경우 아래 패키지들이 필요함) bulma-stylus hexo-component-inferno hexo-renderer-inferno inferno inferno-create-element 1$ npm install --save bulma-stylus hexo-component-inferno hexo-renderer-inferno inferno inferno-create-element hexo s 명령어로 로컬에서 테마가 적용됬는지 확인 1$ hexo s","link":"/2021/08/08/blog/"},{"title":"Git, Github 개요","text":"버전 관리 어떤 프로젝트에서 특정 시점 및 관리를 위해 버전을 관리하는것은 필수라고 할 수 있다. starbucks starbucks 로그인 페이지 개발본 starbucks 스크롤 버그 수정 starbucks 배포용 위에 목록처럼 여러가지의 기능이 추가되고 수정되면서 프로젝트 정보가 변경된다. 관리 및 특정 시점의 버전을 관리해야하는것은 필수적인 요소라 할 수 있는데 여러 사람과의 작업 및 규모가 클수록 관리가 힘들어진다. 이런 프로젝트의 관리를 위해 SVN, Git, … 등등의 버전 관리 시스템을 도입하여 사용하고 있다. Git Git은 컴퓨터 파일의 변경사항을 추적하고 여러 사용자들 간에 파일 작업을 조율하기위한 VCS(Version Control System) 시스템 설치git 다운로드 위 링크에서 각 운영체제에 맞는 설치 프로그램을 다운로드 후 실행하여 설치하여 터미널에서 테스트 진행 버전확인 123456789101112git --version# 버전정보 출력git init# 현재 프로젝트 버전관리를 위해 명령어 입력git config --global core.autocrlf input# Mac 용, Window는 input -&gt; true 로 입력git config --global user.name 'User Name 입력'# Github 가입필요git config --global user.email 'User Email 입력'# Github 가입필요git config --global --list# 현재 설정된 값 확인 현재는 사용하는 로컬 컴퓨터에만 git정보가 등록이 되어 사용하던 컴퓨터가 없으면 다시 다운로드를 받을 수 없다. 어디서든지 다시 프로젝트 정보를 다운로드 받을 수 있도록 Github 서비스를 이용한다. Github깃헙 가입하기 Singup 버튼을 통해 가입을 진행(이메일 인증이 필요함) 프로젝트 정보를 업로드 할 Repository 생성을 위해 New Repository 버튼으로 생성 진행 Github 주소 등록 업로드를 위해 Github Repository의 주소를 복제한다. 1234git remote add origin https://&quot;repository 주소&quot;# 원격(Github 저장소를 뜻) 주소를 지정하기git push origin master# 원격 저장소에 업로드 (Github로그인 관련 안내가 나오면 진행)","link":"/2021/09/19/git/"}],"tags":[{"name":"git","slug":"git","link":"/tags/git/"},{"name":"blog","slug":"blog","link":"/tags/blog/"}],"categories":[{"name":"Blog","slug":"Blog","link":"/categories/Blog/"},{"name":"FastCampus","slug":"FastCampus","link":"/categories/FastCampus/"}]}